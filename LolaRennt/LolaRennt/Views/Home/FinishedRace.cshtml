@model string

@Html.Partial("FirebaseScripts")

<h2 id ="TitleH">Завершенный заезд</h2>

<div id="FinishedRaceMap" style="width: 640px; height: 480px;"></div>

<script>
    var finishedRaceMap;

    function ReadTrack(item, i, arr) {
        this.push({ lat: item.Point.X, lng: item.Point.Y });
    }

    function FindMinMax(trackCoordinates, min, max)
    {
        trackCoordinates.forEach(function (item, i, arr) {
            if (min.X == 0 || item.lat < min.X) {
                min.X = item.lat;
            }
            if (max.X == 0 || item.lat > max.X) {
                max.X = item.lat;
            }
            if (min.Y == 0 || item.lng < min.Y) {
                min.Y = item.lng;
            }
            if (max.Y == 0 || item.lng > max.Y) {
                max.Y = item.lng;
            }
        });
    }

    function initMap() {

        var roomRef = firebase.database().ref(fbMainRoom + "/@Model");

        roomRef.once("value", function (snapshot) {

            var room = snapshot.val();

            var track1 = room.Driver1.Track;
            var track2 = room.Driver2.Track;

            $('#TitleH').html('Завершенный заезд ' + room.Name);

            var track1Coordinates = [];
            var track2Coordinates = [];

            var min = { X: 0, Y: 0 };
            var max = { X: 0, Y: 0 };

            track1.forEach(ReadTrack, track1Coordinates);
            track2.forEach(ReadTrack, track2Coordinates);

            FindMinMax(track1Coordinates, min, max);
            FindMinMax(track2Coordinates, min, max);
            
            var centerX = (max.X + min.X) / 2;
            var centerY = (max.Y + min.Y) / 2;

            var path1 = new google.maps.Polyline({
                path: track1Coordinates,
                geodesic: true,
                strokeColor: '#FF0000',
                strokeOpacity: 0.5,
                strokeWeight: 4
            });

            var path2 = new google.maps.Polyline({
                path: track2Coordinates,
                geodesic: true,
                strokeColor: '#0000FF',
                strokeOpacity: 0.5,
                strokeWeight: 4
            });

            map = new google.maps.Map(document.getElementById('FinishedRaceMap'), {
                center: { lat: centerX, lng: centerY },
                zoom: 256
            });

            map.fitBounds(new google.maps.LatLngBounds(new google.maps.LatLng(min.X, min.Y), new google.maps.LatLng(max.X, max.Y)));

            path1.setMap(map);
            path2.setMap(map);

            var pointStart = new google.maps.LatLng(track1[0].Point.X, track1[0].Point.Y);
            var markerStart = new google.maps.Marker({
                position: pointStart,
                label: "S"
            });
            markerStart.setMap(map);

            var pointFinish = new google.maps.LatLng(track1[track1.length - 1].Point.X, track1[track1.length - 1].Point.Y);
            var markerFinish = new google.maps.Marker({
                position: pointFinish,
                label: "F"
            });
            markerFinish.setMap(map);

            google.maps.event.trigger(map, 'resize');

        });
        //});
    }
</script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCyB8vHmUniK44AyaY0Gmvq3IH238J64G8&callback=initMap" async defer></script>